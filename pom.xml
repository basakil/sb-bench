<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nom.aob</groupId>
    <artifactId>sb-bench</artifactId>
    <packaging>jar</packaging>
    <version>0.16-nje</version>
    <name>${project.artifactId}</name>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>

        <start-class>nom.aob.sbbench.SBBenchApplication</start-class>

        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
        <jib.registry.to>registry.hub.docker.com/basakil</jib.registry.to>
        <spring-cloud.version>Hoxton.SR10</spring-cloud.version>

<!--        <google.jib.version>3.4.0</google.jib.version>-->
        <google.jib.version>3.1.3</google.jib.version>
<!--        <google.jib.version>2.7.1</google.jib.version>-->
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

<!--        will -probably- be used in the future.. -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <version>1.18.28</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${google.jib.version}</version>

                <configuration>
                    <from>
<!--                        docker pull adoptopenjdk/openjdk8:x86_64-ubuntu-jre8u392-b08 -->
<!--                        <image>adoptopenjdk:8u275-b01-jre-openj9-0.23.0@sha256:81554eca4e04335c33537561607efdcd06a8acd00d2e9eda6a6d094150154627</image> -->
<!--                        <image>adoptopenjdk/openjdk8:jre8u282-b08</image> -->
                        <image>adoptopenjdk/openjdk8:x86_64-ubuntu-jre8u392-b08</image>
                    </from>
                    <to>
<!--                        <image>registry.hub.docker.com/basakil/${docker.image.name}:${docker.image.tag}</image>-->
                        <image>${jib.registry.to}/${docker.image.name}:${docker.image.tag}</image>
                        <tags>
                            <tag>latest</tag>
                        </tags>
                    </to>

                    <container>
                        <!-- Assumes you have /bin/sh as specified at the top of /my-entrypoint.sh. -->
                        <entrypoint>/service-aware-entrypoint.sh</entrypoint>
                    </container>
                    <!-- You also need to make the script executable. -->
                    <extraDirectories>
                        <permissions>
                            <permission>
                                <file>/service-aware-entrypoint.sh</file>
                                <mode>755</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>

                </configuration>
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
            </plugin>

        </plugins>
    </build>

</project>